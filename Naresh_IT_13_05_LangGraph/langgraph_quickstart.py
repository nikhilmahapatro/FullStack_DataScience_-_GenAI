# -*- coding: utf-8 -*-
"""LangGraph_QuickStart.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1a7IIJIRrJd9c1q8ManIc7dEk7CVMpzNs
"""

!pip install -U langgraph

from langgraph.graph import StateGraph, END
from typing import TypedDict
from IPython.display import Image, display

class MyState(TypedDict):
    message: str

# Define the start node
def start_node(state: MyState) -> MyState:
    print("Start node received:", state["message"])
    # Process or pass the message to the end node
    return {"message": state["message"] + " -> processed by start"}

# Define the end node
def end_node(state: MyState) -> MyState:
    print("End node received:", state["message"])
    return state

# Build the graph
builder = StateGraph(MyState)


# Define the end node
def end_node(state: MyState) -> MyState:
    print("End node received:", state["message"])
    return state

# Build the graph
builder = StateGraph(MyState)

# Add nodes
builder.add_node("start", start_node)
builder.add_node("end", end_node)

# Define the flow
builder.set_entry_point("start")
builder.add_edge("start", "end")
builder.add_edge("end", END)  # END is a special marker for graph completion

# Compile the graph
graph = builder.compile()

# Run the graph
result = graph.invoke({"message": "Hello LangGraph"})
print("Final result:", result["message"])

